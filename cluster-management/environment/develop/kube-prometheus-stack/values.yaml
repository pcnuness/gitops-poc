# Arquivo values.yaml para o Helm Chart do kube-prometheus-stack
# Este arquivo é ajustado para ambientes de desenvolvimento.
# Inclui configurações padrão do kube-prometheus-stack com ajustes para recursos limitados.

# Configuração global
global:
  # Definindo o limite de recursos, típico para um ambiente de desenvolvimento
  resources:
    limits:
      cpu: 100m  # Limite de CPU
      memory: 256Mi  # Limite de memória
    requests:
      cpu: 50m  # Solicitação de CPU
      memory: 128Mi  # Solicitação de memória#
  namespaceOverride: observability

# Configuração para o Prometheus Operator
prometheusOperator:
  createCustomResource: true  # Habilita CRDs customizadas necessarias para o operador
  resources: {}  # Utiliza as configurações globais de recursos

# Configurações de anotação e rótulo específicos para o ambiente de desenvolvimento
# Estes rótulos ajudam a identificar e organizar as instâncias no cluster.
podLabels:
  environment: development  # Rótulo para identificar o ambiente de desenvolvimento

# Monitoramento e alertas básicos
prometheusRule:
  enabled: true  # Habilita regras de alertas padrão
  additionalPrometheusRulesMap: {}  # Mapa para regras adicionais se necessário

secrets:
  - name: basic-auth
    namespace: monitoring
    type: Opaque
    data:
      auth: cHJvbS1zdGFjaw==

# Configuração do Prometheus
prometheus:
  prometheusSpec:
    resources:
      limits:
        cpu: 200m  # Limite específico de CPU para Prometheus
        memory: 512Mi  # Limite específico de memória para Prometheus
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    hosts:
      - prometheus.ops.local
    paths:
      - /

# Configuração do Alertmanager
alertmanager:
  alertmanagerSpec:
    resources:
      limits:
        cpu: 100m  # Limite específico de CPU para Alertmanager
        memory: 256Mi  # Limite específico de memória para Alertmanager
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    hosts:
      - alertmanager.example.com
    paths:
      - /

# Configuração do Grafana
grafana:
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
      kubernetes.io/ingress.class: nginx
    labels: {}
    paths:
      - /
    pathType: Prefix
    hosts:
      - grafana.example.com